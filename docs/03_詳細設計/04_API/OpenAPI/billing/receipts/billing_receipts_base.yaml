openapi: 3.0.3
info:
  title: SES業務システム - 入金管理API（基本CRUD）
  description: |
    入金管理の基本CRUD操作を提供するAPIです。
  version: 1.0.0

paths:
  /billing/receipts:
    get:
      tags:
        - billing-receipts
      summary: 入金一覧の取得
      description: 入金の一覧を取得します。
      operationId: getReceipts
      parameters:
        - name: page
          in: query
          description: ページ番号（0始まり）
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: ページサイズ
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          description: ソート項目（例：receiptDate,desc）
          schema:
            type: string
        - name: status
          in: query
          description: 入金ステータス
          schema:
            type: string
            enum: [pending, allocated, partially_allocated, unallocated]
      responses:
        '200':
          description: 入金一覧の取得に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReceiptSummary'
                  pageInfo:
                    $ref: './billing_common.yaml#/components/schemas/PageInfo'
        '401':
          $ref: './openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: './openapi.yaml#/components/responses/Forbidden'
      security:
        - bearerAuth: []
    
    post:
      tags:
        - billing-receipts
      summary: 入金の新規登録
      description: 新しい入金を登録します。
      operationId: createReceipt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiptCreate'
      responses:
        '201':
          description: 入金の登録に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Receipt'
                  message:
                    type: string
                    example: "入金の登録が完了しました。"
        '400':
          $ref: './openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: './openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: './openapi.yaml#/components/responses/Forbidden'
      security:
        - bearerAuth: []

  /billing/receipts/{receipt_id}:
    get:
      tags:
        - billing-receipts
      summary: 入金の詳細取得
      description: 特定の入金の詳細情報を取得します。
      operationId: getReceipt
      parameters:
        - name: receipt_id
          in: path
          description: 入金ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 入金詳細の取得に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Receipt'
        '400':
          $ref: './openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: './openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: './openapi.yaml#/components/responses/Forbidden'
        '404':
          $ref: './openapi.yaml#/components/responses/NotFound'
      security:
        - bearerAuth: []
    
    put:
      tags:
        - billing-receipts
      summary: 入金の更新
      description: 特定の入金情報を更新します。
      operationId: updateReceipt
      parameters:
        - name: receipt_id
          in: path
          description: 入金ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiptUpdate'
      responses:
        '200':
          description: 入金の更新に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Receipt'
                  message:
                    type: string
                    example: "入金情報の更新が完了しました。"
        '400':
          $ref: './openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: './openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: './openapi.yaml#/components/responses/Forbidden'
        '404':
          $ref: './openapi.yaml#/components/responses/NotFound'
        '409':
          description: 更新できない状態
          content:
            application/json:
              schema:
                $ref: './billing_common.yaml#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
    
    delete:
      tags:
        - billing-receipts
      summary: 入金の削除
      description: 特定の入金を削除します（割当がない場合のみ可能）。
      operationId: deleteReceipt
      parameters:
        - name: receipt_id
          in: path
          description: 入金ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 入金の削除に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "入金の削除が完了しました。"
        '400':
          $ref: './openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: './openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: './openapi.yaml#/components/responses/Forbidden'
        '404':
          $ref: './openapi.yaml#/components/responses/NotFound'
        '409':
          description: 割当があり削除できない
          content:
            application/json:
              schema:
                $ref: './billing_common.yaml#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

  /billing/invoices/{invoice_id}/receipts:
    get:
      tags:
        - billing-receipts
      summary: 請求書別の入金一覧取得
      description: 特定の請求書に対する入金一覧を取得します。
      operationId: getReceiptsByInvoice
      parameters:
        - name: invoice_id
          in: path
          description: 請求ID
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: ページ番号（0始まり）
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: ページサイズ
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: 請求書別入金一覧の取得に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReceiptWithAllocation'
                  invoice:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: 請求ID
                      invoiceNumber:
                        type: string
                        description: 請求書番号
                      totalAmount:
                        $ref: './billing_common.yaml#/components/schemas/Money'
                      paidAmount:
                        $ref: './billing_common.yaml#/components/schemas/Money'
                      remainingAmount:
                        $ref: './billing_common.yaml#/components/schemas/Money'
                  pageInfo:
                    $ref: './billing_common.yaml#/components/schemas/PageInfo'
        '400':
          $ref: './openapi.yaml#/components/responses/BadRequest'
        '401':
          $ref: './openapi.yaml#/components/responses/Unauthorized'
        '403':
          $ref: './openapi.yaml#/components/responses/Forbidden'
        '404':
          $ref: './openapi.yaml#/components/responses/NotFound'
      security:
        - bearerAuth: []

components:
  schemas:
    ReceiptSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 入金ID
        receiptNumber:
          type: string
          description: 入金番号
        customerId:
          type: string
          format: uuid
          description: 顧客ID
        customerName:
          type: string
          description: 顧客名
        receiptDate:
          type: string
          format: date
          description: 入金日
        amount:
          $ref: './billing_common.yaml#/components/schemas/Money'
        paymentMethod:
          type: string
          enum: [bank_transfer, cash, credit_card, other]
          description: 支払方法
        reference:
          type: string
          description: 参照情報
        status:
          type: string
          enum: [pending, allocated, partially_allocated, unallocated]
          description: 入金ステータス
        allocatedAmount:
          $ref: './billing_common.yaml#/components/schemas/Money'
        unallocatedAmount:
          $ref: './billing_common.yaml#/components/schemas/Money'
        createdAt:
          type: string
          format: date-time
          description: 作成日時
        updatedAt:
          type: string
          format: date-time
          description: 更新日時
      example:
        id: "123e4567-e89b-12d3-a456-426614174400"
        receiptNumber: "REC-2023-0001"
        customerId: "123e4567-e89b-12d3-a456-426614174001"
        customerName: "株式会社テスト"
        receiptDate: "2023-05-25"
        amount:
          amount: 1000000
          currency: "JPY"
        paymentMethod: "bank_transfer"
        reference: "お客様振込番号: ABC12345"
        status: "pending"
        allocatedAmount:
          amount: 0
          currency: "JPY"
        unallocatedAmount:
          amount: 1000000
          currency: "JPY"
        createdAt: "2023-05-25T14:00:00Z"
        updatedAt: "2023-05-25T14:00:00Z"

    Receipt:
      allOf:
        - $ref: '#/components/schemas/ReceiptSummary'
        - type: object
          properties:
            bankAccountId:
              type: string
              format: uuid
              description: 入金先銀行口座ID
            bankAccountInfo:
              type: object
              properties:
                bankName:
                  type: string
                  description: 銀行名
                branchName:
                  type: string
                  description: 支店名
                accountType:
                  type: string
                  description: 口座種別
                accountNumber:
                  type: string
                  description: 口座番号
                accountName:
                  type: string
                  description: 口座名義
            notes:
              type: string
              description: 備考
            allocations:
              type: array
              items:
                $ref: '#/components/schemas/ReceiptAllocation'

    ReceiptAllocation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 割当ID
        receiptId:
          type: string
          format: uuid
          description: 入金ID
        invoiceId:
          type: string
          format: uuid
          description: 請求ID
        invoiceNumber:
          type: string
          description: 請求書番号
        amount:
          $ref: './billing_common.yaml#/components/schemas/Money'
        allocatedAt:
          type: string
          format: date-time
          description: 割当日時
        allocatedBy:
          type: string
          description: 割当実行者
        notes:
          type: string
          description: 備考
      example:
        id: "123e4567-e89b-12d3-a456-426614174410"
        receiptId: "123e4567-e89b-12d3-a456-426614174400"
        invoiceId: "123e4567-e89b-12d3-a456-426614174000"
        invoiceNumber: "INV-2023-0001"
        amount:
          amount: 1000000
          currency: "JPY"
        allocatedAt: "2023-05-25T14:30:00Z"
        allocatedBy: "経理担当"
        notes: "4月分請求への充当"

    ReceiptWithAllocation:
      allOf:
        - $ref: '#/components/schemas/ReceiptSummary'
        - type: object
          properties:
            allocation:
              $ref: '#/components/schemas/ReceiptAllocation'

    ReceiptCreate:
      type: object
      required:
        - customerId
        - receiptDate
        - amount
        - paymentMethod
      properties:
        receiptNumber:
          type: string
          description: 入金番号（未指定時は自動採番）
        customerId:
          type: string
          format: uuid
          description: 顧客ID
        receiptDate:
          type: string
          format: date
          description: 入金日
        amount:
          $ref: './billing_common.yaml#/components/schemas/Money'
        paymentMethod:
          type: string
          enum: [bank_transfer, cash, credit_card, other]
          description: 支払方法
        reference:
          type: string
          description: 参照情報
        bankAccountId:
          type: string
          format: uuid
          description: 入金先銀行口座ID
        notes:
          type: string
          description: 備考
        invoiceId:
          type: string
          format: uuid
          description: 請求ID（自動割当する場合）
      example:
        customerId: "123e4567-e89b-12d3-a456-426614174001"
        receiptDate: "2023-05-25"
        amount:
          amount: 1000000
          currency: "JPY"
        paymentMethod: "bank_transfer"
        reference: "お客様振込番号: ABC12345"
        bankAccountId: "123e4567-e89b-12d3-a456-426614174300"
        notes: "月末一括支払い"
        invoiceId: "123e4567-e89b-12d3-a456-426614174000"

    ReceiptUpdate:
      type: object
      properties:
        receiptNumber:
          type: string
          description: 入金番号
        customerId:
          type: string
          format: uuid
          description: 顧客ID
        receiptDate:
          type: string
          format: date
          description: 入金日
        amount:
          $ref: './billing_common.yaml#/components/schemas/Money'
        paymentMethod:
          type: string
          enum: [bank_transfer, cash, credit_card, other]
          description: 支払方法
        reference:
          type: string
          description: 参照情報
        bankAccountId:
          type: string
          format: uuid
          description: 入金先銀行口座ID
        notes:
          type: string
          description: 備考