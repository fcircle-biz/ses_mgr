spring:
  application:
    name: ses-mgr
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/ses_mgr
    username: postgres
    password: postgres
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      max-lifetime: 1800000
  transaction:
    default-timeout: 30  # デフォルトのトランザクションタイムアウト（秒）
    rollback-on-commit-failure: true
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
  jackson:
    date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  data:
    redis:
      host: localhost
      port: 6379
  cache:
    type: redis
    redis:
      time-to-live: 3600000
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB

server:
  port: 8080
  servlet:
    context-path: /
  error:
    include-stacktrace: never

# アプリケーション固有の設定
application:
  security:
    jwt:
      secret-key: ${JWT_SECRET:defaultsecretkey}
      token-validity-in-seconds: 86400
      issuer: ses-mgr
      access-token-expiration: 1800000  # 30分（ミリ秒）
      refresh-token-expiration: 1209600000  # 14日（ミリ秒）
    account:
      max-failed-attempts: 5
      lock-duration-minutes: 30
      mfa:
        enabled: true
        issuer: ses-mgr
        code-validity-seconds: 30
  logging:
    request-response: ${ENABLE_REQUEST_RESPONSE_LOGGING:false}
  storage:
    minio:
      url: ${MINIO_URL:http://localhost:9000}
      access-key: ${MINIO_ACCESS_KEY:minioadmin}
      secret-key: ${MINIO_SECRET_KEY:minioadmin}
      bucket: ${MINIO_BUCKET:sesmgr}

# アクチュエータの設定
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized

# ロギング設定
logging:
  level:
    root: INFO
    jp.co.example.sesapp: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.data.jdbc: INFO
    org.springframework.cache: INFO
    org.springframework.transaction: INFO
    jp.co.example.sesapp.common.config.TransactionLoggingAspect: DEBUG
    jp.co.example.sesapp.common.service.TransactionService: DEBUG